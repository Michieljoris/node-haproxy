0 info it worked if it ends with ok
1 verbose cli [ '/home/michieljoris/bin/node',
1 verbose cli   '/home/michieljoris/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.7.4
3 info using node@v0.12.2
4 verbose node symlink /home/michieljoris/bin/node
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: '/home/michieljoris/src/node-haproxy',
8 silly cache add   type: 'directory' }
9 verbose addLocalDirectory /home/michieljoris/.npm/node-haproxy/0.1.25/package.tgz not in flight; packing
10 verbose tar pack [ '/home/michieljoris/.npm/node-haproxy/0.1.25/package.tgz',
10 verbose tar pack   '/home/michieljoris/src/node-haproxy' ]
11 verbose tarball /home/michieljoris/.npm/node-haproxy/0.1.25/package.tgz
12 verbose folder /home/michieljoris/src/node-haproxy
13 info prepublish node-haproxy@0.1.25
14 verbose addLocalTarball adding from inside cache /home/michieljoris/.npm/node-haproxy/0.1.25/package.tgz
15 silly cache afterAdd node-haproxy@0.1.25
16 verbose afterAdd /home/michieljoris/.npm/node-haproxy/0.1.25/package/package.json not in flight; writing
17 verbose afterAdd /home/michieljoris/.npm/node-haproxy/0.1.25/package/package.json written
18 silly publish { name: 'node-haproxy',
18 silly publish   description: 'node-haproxy --------',
18 silly publish   homepage: 'https://github.com/michieljoris/node-haproxy',
18 silly publish   keywords: [],
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'https://github.com/michieljoris/node-haproxy.git' },
18 silly publish   author:
18 silly publish    { name: 'Michiel van Oosten',
18 silly publish      email: 'mail@axion5.net',
18 silly publish      url: 'http://www.axion5.net/' },
18 silly publish   licenses:
18 silly publish    [ { type: 'MIT',
18 silly publish        url: 'http://github.com/michieljoris/node-haproxy/blob/master/LICENSE.txt' } ],
18 silly publish   main: 'src/api.js',
18 silly publish   bin: { 'node-haproxy': 'bin/node-haproxy.js' },
18 silly publish   engines: { node: '>= 0.6.x' },
18 silly publish   dependencies:
18 silly publish    { dougs_vow: '*',
18 silly publish      'fs-extra': '0.18.x',
18 silly publish      logthis: '*',
18 silly publish      crdt: '~3.5.1',
18 silly publish      handlebars: '~1.0.12',
18 silly publish      debounce: '0.0.2',
18 silly publish      'deep-equal': '0.0.0',
18 silly publish      haproxy: '0.0.3',
18 silly publish      changeset: '0.0.5',
18 silly publish      optimist: '~0.6.0',
18 silly publish      xtend: '~2.0.6',
18 silly publish      extend: '~1.2.0',
18 silly publish      level: '~0.18.0',
18 silly publish      mkdirp: '~0.3.5',
18 silly publish      flic: '^1.1.2',
18 silly publish      'node-ipc': '^1.1.13' },
18 silly publish   devDependencies: { docco: '*' },
18 silly publish   private: false,
18 silly publish   scripts: { docs: 'docco src/api.js' },
18 silly publish   version: '0.1.25',
18 silly publish   readme: 'node-haproxy\n--------\n\nSet, modify and hot load haproxy configuration from node.\n\nFunctionality and code lifted and adapted from\n[thalassa=aqueduct](https://github.com/PearsonEducation/thalassa-aqueduct). \n\nYou can run this module standalone (`npm install -g node-haproxy; node-haproxy --ipc`) and\ncommunicate with it using ipc (`var ipcClient = require (\'node-haproxy/src/ipc-client\'`) \nor use the api directly (`var haproxy = require(\'node-haproxy\'`).\n\nIn both cases it will fire up a haproxy instance which you can query and modify programmatically.\n\nWhen modifying or adding/removing front and backends programmatically haproxy is\nreconfigured on the fly. Back and frontends are persisted between restarts of the node process.\n\nChanges are saved to a leveldb.\n\nWhen no options are passed in, the included haproxy executable (v1.5) is used.\nThe leveldb and persisted data is stored by default in the module\'s folder. Which means\nthat on updating or reinstalling the module the data is wiped.\n\nLocations of the leveldb, template haproxy.cfg file and persisted info file can\nbe set using options, amongst some more settings relating to haproxy.\n\nParaphrased from the original readme:\n\n## HAProxy Fundamentals\n\nNode-haproxy does not try to obfuscate HAProxy, and it\'s important to know the fundamentals of how HAProxy works to understand node-haproxy. The API mirrors HAProxy\'s semantics. The [HAProxy documentation](http://cbonte.github.io/haproxy-dconv/configuration-1.4.html) contains a wealth of detailed information.\n\n1. **Frontends** - A "frontend" section describes a set of listening sockets accepting client\nconnections.\n\n2. **Backends** - A "backend" section describes a set of servers to which the proxy will connect\nto forward incoming connections.\n\n3. **Members/Servers** - node-haproxy calls the servers that *backends* route to "members". In other words, members of a backend pool of servers.\n\n4. **Config file** - At startup, HAProxy loads a configuration file and never looks at that file again. node-haproxy manages this by re-templating a new config file and gracefully restarting the HAProxy process.\n\n5. **Stats Socket** - a UNIX socket in stream mode that will return various statistics outputs and even allows some basic configuration tweaking like enabling and disabling existing backend members, setting weights, etc.\n\n## Options\n\n     ./node_modules/.bin/node-haproxy --help\n    Options:\n    --haproxySocketPath  path to Haproxy socket file\n    --haproxyPidPath     path to  Haproxy pid file\n    --haproxyCfgPath     generated Haproxy config location\n    --templateFile       template used to generate Haproxy config\n    --persistence        directory to save configuration\n    --dbPath             filesystem path for leveldb\n    --sudo               use sudo when starting haproxy\n    --which              path for haproxy, set to \'system\' to look for it, otherwise the included haproxy (v1.5) is used\n      --ipc                start up ipc server\n\nThe following functions can be invoked on the required node-haproxy module or\nusing the ipc-client (`ipcClient(functionName, args`), which uses promises:\nDon\'t forget to call ipcClient.close() if you want to stop the node process..\n\nExample of using the ipc-client:\n\n    ipcClient(\'getFrontends\', [])\n      .when(\n        function(result) {\n          console.log("Frontends\\n", result);\n          return ipcClient(\'getBackends\', []);\n        })\n      .when(\n        function(result) {\n          console.log("Backends\\n", result);\n          ipcClient.close();\n        },\n        function(error) {\n          console.log("Error\\n", error);\n          ipcClient.close();\n        }\n\n      );\n\n### getFrontends()\n\nReturns Array of `frontend` objects for all of the frontends configured \n\nFor example:\n\n    [{\n        "id": "frontend/myapp",\n        "_type": "frontend",\n        "key": "myapp",\n        "bind": "*:8080,*:80",\n        "backend": "live",\n        "mode": "http",\n        "keepalive": "default",\n        "rules": [{\n            "type": "header",\n            "header": "host",\n            "operation": "hdr_dom",\n            "value": "staged.myapp.com",\n            "backend": "staged"\n        }],\n        "natives": []\n    }]\n\n\n### getFrontend(key)\n\nGets a specific frontend by `key`. \n\n\n### putFrontend(key, obj)\n\nCreate or update a `frontend` by `key`. \n\n    {\n        "bind": "10.2.2.2:80,*:8080" // IP and ports to bind to, comma separated, host may be *\n      , "backend": "foo"      // the default backend to route to, it must be defined already\n      , "mode": "tcp"         // default: http, expects tcp|http\n      , "keepalive": "close"  // default: "default", expects default|close|server-close\n      , "rules": []           // array of rules, see below\n      , "natives": []         // array of strings of raw config USE SPARINGLY!!\n    }\n\n### deleteFrontend(key)\n\nDelete a specific frontend by `key`. \n\n\n### getBackends()\n\nReturns Array of `backend` objects for all of the backends configured\n\nFor example:\n\n    [{\n    \t"id": "backend/live",\n    \t"_type": "backend",\n    \t"key": "live",\n    \t"type": "dynamic",\n    \t"name": "classroom-ui",\n    \t"version": "1.0.0",\n    \t"balance": "roundrobin",\n    \t"host": null,\n    \t"mode": "http",\n    \t"members": [{\n    \t\t"name": "myapp",\n    \t\t"version": "1.0.0",\n    \t\t"host": "10.10.240.121",\n    \t\t"port": 8080,\n    \t\t"lastKnown": 1378762056885,\n    \t\t"meta": {\n    \t\t\t"hostname": "dev-use1b-pr-01-myapp-01x00x00-01",\n    \t\t\t"pid": 17941,\n    \t\t\t"registered": 1378740834616\n    \t\t},\n    \t\t"id": "/myapp/1.0.0/10.10.240.121/8080"\n    \t},\n    \t{\n    \t\t"name": "myapp",\n    \t\t"version": "1.0.0",\n    \t\t"host": "10.10.240.80",\n    \t\t"port": 8080,\n    \t\t"lastKnown": 1378762060226,\n    \t\t"meta": {\n    \t\t\t"hostname": "dev-use1b-pr-01-myapp-01x00x00-02",\n    \t\t\t"pid": 18020,\n    \t\t\t"registered": 1378762079883\n    \t\t},\n    \t\t"id": "/myapp/1.0.0/10.10.240.80/8080"\n    \t}],\n    \t"natives": []\n    }]\n\n\n### getBackend(key)\n\nGets a specific `backend` by `key`. \n\n\n### putBackend(key, obj)\n\nCreate or update a `backend` by `key`. \n\n    {\n        "type" : "dynamic|static" \n      , "name" : "foo" // only required if type = dynamic\n      , "version" : "1.0.0" // only required if type = dynamic\n      , "balance" : "roundrobin|source" // defaults to roundrobin\n      , "host" : "myapp.com"  // default: undefined, if specified request to member will contain this host header\n      , "health" : {                 // optional health check\n      \t  "method": "GET"            // HTTP method\n      \t, "uri": "/checkity-check"   // URI to call\n      \t, "httpVersion": "HTTP/1.1"  // HTTP/1.0 or HTTP/1.1 `host` required if HTTP/1.1\n      \t, "interval": 5000           // period to check, milliseconds\n      }\n      , "mode" : "http|tcp" // default: http\n      , "natives": []  // array of strings of raw config USE SPARINGLY!!\n      , "members" : [] // if type = dynamic this is dynamically populated based on role/version subscription\n                       // otherwise expects { host: \'10.10.10.10\', port: 8080}\n    }\n\n\n### deleteBackend(key)\n\nDelete a specific `backend` by `key`. \n\n\n\n### updateBackend(key)\n\nUpdate a `backend`s `role` and `version` \n\n    {\n        "name": "myapp"\t\t\n      , "version": "1.1.0" // version to route to\n    }\n\n`name` is actually optional. You may also just send the `version`:\n\n    {\n        "version": "1.1.0"\n    }\n\n\n### getHaproxyConfig()\n\nReturn the last know generated HAProxy config file contents that were written to the location of `opts.haproxyCfgPath`.\n\n\n    global\n\t  log 127.0.0.1 local0\n\t  log 127.0.0.1 local1 notice\n\t  daemon\n\t  maxconn 4096\n\t  user haproxy \n\t  group haproxy \n\t  stats socket /tmp/haproxy.status.sock user appuser level admin\n\n\t  defaults\n\t    log global\n\t    option dontlognull\n\t    option redispatch\n\t    retries 3\n\t    maxconn 2000\n\t    timeout connect 5000ms\n\t    timeout client 50000ms\n\t    timeout server 50000ms\n\n\t  listen stats :1988\n\t    mode http\n\t    stats enable\n\t    stats uri /\n\t    stats refresh 2s\n\t    stats realm Haproxy\\ Stats\n\t    stats auth showme:showme\n\n\n\t  frontend myapp\n\t    bind *:8080,*:80\n\t\tmode http\n\t\tdefault_backend live\n\t\toption httplog\n\t\toption http-server-close\n\t\toption http-pretend-keepalive\n\t\tacl header_uv7vi hdr_dom(host) myapp-staged.com\n\t\tuse_backend staged if header_uv7vi\n\n\n\n\t  backend live\n\t    mode http\n\t\tbalance roundrobin\n\t\tserver live_10.10.240.121:8080 10.10.240.121:8080 check inter 2000\n\t\tserver live_10.10.240.80:8080 10.10.240.80:8080 check inter 2000\n\n\t  backend staged\n\t    mode http\n\t\tbalance roundrobin\n\t\tserver staged_10.10.240.174:8080 10.10.240.174:8080 check inter 2000\n\t\tserver staged_10.10.240.206:8080 10.10.240.206:8080 check inter 2000\n\n\n#### Routing Rules\n\nThere are currently 3 types of rules that can be applied to frontends: `path`, `url`, and `header`.\n\nPath rules support `path`, `path_beg`, and `path_reg` HAProxy operations\n\n\t{\n\t    "type": "path"\n\t  , "operation": "path|path_beg|path_reg"\n\t  , "value": "favicon.ico|/ecxd/|^/article/[^/]*$"\n\t  , "backend": "foo" // if rule is met, the backend to route the request to\n\t}\n\n\nUrl rules support `url`, `url_beg`, and `url_reg` HAProxy operations\n\n\t{\n\t    "type": "url"\n\t  , "operation": "url|url_beg|url_reg"\n\t  , "value": "/bar" // value for the operation\n\t  , "backend": "bar" // if rule is met, the backend to route the request to\n\t}\n\nHeader rules support `hdr_dom` with a entire value at this point\n\n\t{\n\t    "type": "header"\n\t  , "header": "host"\t\t\t// the name of the HTTP header\n\t  , "operation": "hdr_dom"\n\t  , "value": "baz.com"\n\t  , "backend": "baz" // if rule is met, the backend to route the request to\n\t}\n\n#### Natives\n\nThe natives property is an end around way to insert raw lines of config for front ends and backends. Use them sparingly but use them if you need them.\n\n\n### TODO\n* thrown exceptions are are not handled in api.js and dependencies\n* remove health checks/roles/version leftover from Aqea\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'a4314d716ae30b1e79812abbaab03abf5d4f608e',
18 silly publish   bugs: { url: 'https://github.com/michieljoris/node-haproxy/issues' },
18 silly publish   _id: 'node-haproxy@0.1.25',
18 silly publish   _shasum: '0193a8b84736cc1592875993b7e33fe764006105',
18 silly publish   _from: '.' }
19 silly mapToRegistry name node-haproxy
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/node-haproxy
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /home/michieljoris/.npm/node-haproxy/0.1.25/package.tgz
25 verbose request uri https://registry.npmjs.org/node-haproxy
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 3:11:16 PM
28 verbose request using bearer token for auth
29 verbose request id 260eed67f6d52f48
30 http request PUT https://registry.npmjs.org/node-haproxy
31 http 403 https://registry.npmjs.org/node-haproxy
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '96',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Thu, 30 Apr 2015 05:12:34 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-syd1625-SYD',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1430370662.096782,VS0,VE92010' }
33 verbose request invalidating /home/michieljoris/.npm/registry.npmjs.org/node-haproxy on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.1.25." : node-haproxy
35 verbose stack     at CachingRegistryClient.<anonymous> (/home/michieljoris/opt/node-v0.12.2-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
35 verbose stack     at Request._callback (/home/michieljoris/opt/node-v0.12.2-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
35 verbose stack     at Request.self.callback (/home/michieljoris/opt/node-v0.12.2-linux-x64/lib/node_modules/npm/node_modules/request/request.js:344:22)
35 verbose stack     at Request.emit (events.js:110:17)
35 verbose stack     at Request.<anonymous> (/home/michieljoris/opt/node-v0.12.2-linux-x64/lib/node_modules/npm/node_modules/request/request.js:1239:14)
35 verbose stack     at Request.emit (events.js:129:20)
35 verbose stack     at IncomingMessage.<anonymous> (/home/michieljoris/opt/node-v0.12.2-linux-x64/lib/node_modules/npm/node_modules/request/request.js:1187:12)
35 verbose stack     at IncomingMessage.emit (events.js:129:20)
35 verbose stack     at _stream_readable.js:908:16
35 verbose stack     at process._tickCallback (node.js:355:11)
36 verbose statusCode 403
37 verbose pkgid node-haproxy
38 verbose cwd /home/michieljoris/src/node-haproxy
39 error Linux 3.13.0-37-generic
40 error argv "/home/michieljoris/bin/node" "/home/michieljoris/bin/npm" "publish"
41 error node v0.12.2
42 error npm  v2.7.4
43 error code E403
44 error "You cannot publish over the previously published version 0.1.25." : node-haproxy
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
